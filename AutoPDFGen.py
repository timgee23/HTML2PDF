#!/usr/bin/env python
# encoding: utf-8
'''
HTML2PDF.AutoPDFGen1 -- shortdesc

HTML2PDF.AutoPDFGen1 is a description

It defines classes_and_methods

@author:     user_name

@copyright:  2021 organization_name. All rights reserved.

@license:    license

@contact:    user_email
@deffield    updated: Updated
'''

import sys
import os
import doit

from optparse import OptionParser

__all__ = []
__version__ = 0.1
__date__ = '2021-01-26'
__updated__ = '2021-01-26'

DEBUG = 0
TESTRUN = 0
PROFILE = 0

def main(argv=None):
    '''Command line options.'''

    program_name = os.path.basename(sys.argv[0])
    program_version = "v0.1"
    program_build_date = "%s" % __updated__

    program_version_string = '%%prog %s (%s)' % (program_version, program_build_date)
    #program_usage = '''usage: spam two eggs''' # optional - will be autogenerated by optparse
    program_longdesc = '''''' # optional - give further explanation about what the program does
    program_license = "Copyright 2021 user_name (organization_name)                                            \
                Licensed under the Apache License 2.0\nhttp://www.apache.org/licenses/LICENSE-2.0"

    if argv is None:
        argv = sys.argv[1:]
    try:
        # setup option parser
        parser = OptionParser()
        parser.add_option("-u", "--url", dest="URL", help="set input URL String")
        parser.add_option("-i", "--in", dest="infile", help="set URL input file", metavar="FILE")
        parser.add_option("-d", "--dir", dest="dir", help="set the destination directory")
       

        # set defaults
        #parser.set_defaults(outfile="./out.txt", infile="./in.txt")

        # process options
        (opts,args) = parser.parse_args()

        passed_file=False
        passed_url=False
        passed_dir=False
        list_to_process=[]
        if opts.infile:
            print("infile = %s" % opts.infile)
            passed_file=True
            list_to_process=open(opts.infile).readlines()
        if opts.URL:
            print("URL = %s" % opts.URL)
            passed_url=True
            if passed_file==True:
                raise Exception("Can't have a url AND a URL file list")
            #need to make a list of it for passing to doit
            list_to_process.append(opts.URL)
        if opts.dir:
            passed_dir=True
            print("output directory = %s" % opts.dir)
        if (not (passed_dir & (passed_file ^ passed_url) )):
            raise Exception("Improper confinguation")
        doit.doit(opts.dir,list_to_process)

        # MAIN BODY #

    except Exception as e:
        indent = len(program_name) * " "
        sys.stderr.write(program_name + ": " + repr(e) + "\n")
        sys.stderr.write(indent + "  for help use --help")
        return 2
    # Now start the work
    print("Parsing out URLS")
    #try:
    #    fn=open(opts.infile)
    #   url_list=fn.readlines()
    #    for url in url_list:
    
            

if __name__ == "__main__":
    if DEBUG:
        sys.argv.append("-h")
    sys.exit(main())